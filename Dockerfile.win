# https://medium.com/@aharon.amir/develop-c-on-docker-with-vscode-98fb85b818b2
FROM ubuntu:latest

RUN apt-get update
RUN apt-get install -y 
RUN apt-get install -y git 
RUN apt-get install -y gcc-8 
RUN apt-get install -y g++-8 
RUN DEBIAN_FRONTEND="noninteractive" apt-get install -y cmake 
RUN apt-get install -y gdb 
RUN apt-get install -y gdbserver
RUN apt-get install build-essential -y
RUN apt-get install libgtk2.0-dev -y 
RUN apt-get install pkg-config -y 
RUN apt-get clean autoclean
RUN apt-get autoremove -y
RUN rm -rf /var/lib/apt/lists/*

# Second: get and build OpenCV 3.2
#
RUN apt-get update
RUN apt-get install -y wget
RUN apt-get install unzip -y
RUN cd \
    && wget https://github.com/opencv/opencv/archive/3.2.0.zip \
    && unzip 3.2.0.zip \
    && cd opencv-3.2.0 \
    && mkdir build \
    && cd build \
    && cmake .. \
    && make -j8 \
    && make install \
    && cd \
    && rm 3.2.0.zip


# Third: install and build opencv_contrib
#
RUN cd \
    && wget https://github.com/opencv/opencv_contrib/archive/3.2.0.zip \
    && unzip 3.2.0.zip \
    && cd opencv-3.2.0/build \
    && cmake -DOPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-3.2.0/modules/ .. \
    && make -j8 \
    && make install \
    && cd ../.. \
    && rm 3.2.0.zip
    
RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 999 \
 && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 999 \
 && update-alternatives --install /usr/bin/cc  cc  /usr/bin/gcc-8 999 \
 && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 999

RUN useradd -ms /bin/bash develop
RUN echo "develop   ALL=(ALL:ALL) ALL" >> /etc/sudoers

# for gdbserver
EXPOSE 2000

USER develop
WORKDIR /home/develop
RUN git clone https://github.com/google/googletest.git

#ARG WORKSPACE_ROOT
VOLUME /home/develop/eagle
WORKDIR /home/develop/eagle/build